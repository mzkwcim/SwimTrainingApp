@model SwimTrainingApp.Models.Training

@{
    ViewData["Title"] = "Edit Training";
}
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit Training</h1>

<div class="form-group">
    <label for="training-selector">Select a Training</label>
    <select id="training-selector" class="form-control">
        <option value="">-- Select a Training --</option>
        @foreach (var training in ViewBag.TrainingList)
        {
            <option value="@training.Id">@training.Date.ToString("yyyy-MM-dd HH:mm")</option>
        }
    </select>
</div>

<!-- Formularz edycji treningu -->
<div id="edit-form" style="display: none;">
    <form asp-action="Edit" method="post">
        <input type="hidden" id="training-id" name="Id" />

        <div class="form-group">
            <label asp-for="Date" class="control-label"></label>
            <input asp-for="Date" id="training-date" type="datetime-local" class="form-control" />
            <span asp-validation-for="Date" class="text-danger"></span>
        </div>

        <h3>Tasks</h3>
        <div id="tasks-container">
            <!-- Kontener dla dynamicznie ładowanych zadań -->
        </div>

        <div class="form-group">
            <input type="submit" value="Save Changes" class="btn btn-success" />
        </div>
    </form>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    <script>
        document.getElementById("training-selector").addEventListener("change", async function () {
            const selectedId = this.value;
            const editForm = document.getElementById("edit-form");

            if (selectedId) {
                // Pobierz dane treningu z serwera
                const response = await fetch(`/Trainings/GetTrainingDetails/${selectedId}`);
                const training = await response.json();

                // Wypełnij formularz
                document.getElementById("training-id").value = training.id;
                document.getElementById("training-date").value = training.date;

                // Wyczyszczenie kontenera zadań
                const tasksContainer = document.getElementById("tasks-container");
                tasksContainer.innerHTML = "";

                // Dodanie zadań do formularza
                training.tasks.forEach((task, index) => {
                    const taskHtml = `
                        <div class="task-item">
                            <h4>Task ${index + 1}</h4>
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Section</label>
                                        <input type="text" name="Tasks[${index}].TrainingSection" class="form-control" value="${task.trainingSection}" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Description</label>
                                        <input type="text" name="Tasks[${index}].TaskDescription" class="form-control" value="${task.taskDescription}" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Distance</label>
                                        <input type="number" name="Tasks[${index}].Distance" class="form-control" value="${task.distance}" />
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Task Type</label>
                                        <select name="Tasks[${index}].TaskType" class="form-control">
                                            <option value="NN" ${task.taskType === "NN" ? "selected" : ""}>NN</option>
                                            <option value="RR" ${task.taskType === "RR" ? "selected" : ""}>RR</option>
                                            <option value="ANC" ${task.taskType === "ANC" ? "selected" : ""}>ANC</option>
                                            <option value="ANP" ${task.taskType === "ANP" ? "selected" : ""}>ANP</option>
                                            <option value="AEC1" ${task.taskType === "AEC1" ? "selected" : ""}>AEC1</option>
                                            <option value="AEC2" ${task.taskType === "AEC2" ? "selected" : ""}>AEC2</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <hr />
                        </div>
                    `;
                    tasksContainer.innerHTML += taskHtml;
                });

                // Pokaż formularz
                editForm.style.display = "block";
            } else {
                // Ukryj formularz
                editForm.style.display = "none";
            }
        });
    </script>
}
