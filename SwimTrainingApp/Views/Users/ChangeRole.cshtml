@model SwimTrainingApp.Models.ChangeRoleViewModel

@{
    ViewData["Title"] = "Change User Role";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Change Role</h2>

<form asp-action="ChangeRole" method="post">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="userId">Select User</label>
        <select id="userId" name="userId" class="form-control" onchange="updateRoleDropdown()" required>
            <option value="" disabled selected>-- Select a User --</option>
            @foreach (var user in Model.Users)
            {
                <option value="@user.Id" data-role="@user.Role">@user.Username</option>
            }
        </select>
    </div>

    <div class="form-group mt-3">
        <label for="newRole">Select Role</label>
        <select id="newRole" name="newRole" class="form-control" required>
            <option value="" disabled selected>-- Select a Role --</option>
            @foreach (var role in Model.AvailableRoles)
            {
                <option value="@role.ToString()">@role.ToString()</option>
            }
        </select>
    </div>

    <button type="submit" class="btn btn-primary mt-3">Change Role</button>
</form>

<script>
    function updateRoleDropdown() {
        const userSelect = document.getElementById("userId");
        const roleSelect = document.getElementById("newRole");

        const selectedUserOption = userSelect.options[userSelect.selectedIndex];
        const currentRole = selectedUserOption.getAttribute("data-role");

        Array.from(roleSelect.options).forEach(option => {
            if (option.value === currentRole) {
                option.selected = true;
            }
        });
    }
</script>